{"version":3,"file":"static/js/902.a02aa28d.chunk.js","mappings":"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","sources":["utility/Cards.jsx","components/Category.jsx","pages/Main.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst CardMaker = (data) => {\n  const [clicked, setClicked] = useState(false);\n\n  const posterImg = `https://image.tmdb.org/t/p/w500/${data.poster_path}`;\n  const backdropImg = `https://image.tmdb.org/t/p/w500/${data.backdrop_path}`;\n\n  let summary = data.overview;\n  if (summary.length > 430) {\n    summary = summary.substring(0, 430) + \"...\";\n  }\n\n  return (\n    <Card\n      className=\"card\"\n      onClick={(e) => setClicked(true)}\n    >\n      {clicked && <Navigate to={`/player/movie=${data.urlID}`} />}\n      <DefaultImg\n        src={posterImg}\n        className=\"posterImg\"\n        alt={data.title}\n        key={data.id}\n      />\n      <BackDropWrapper className=\"backdropWrapper\">\n        <BackdropImg\n          src={backdropImg}\n          alt={data.title}\n          className=\"backdropImg\"\n        />\n        <span>{data.title}</span>\n        <p>{summary}</p>\n      </BackDropWrapper>\n    </Card>\n  );\n};\n\nexport default CardMaker;\n\nconst Card = styled.div`\n  position: relative;\n  margin-right: 0.5rem;\n  cursor: pointer;\n  width: 200px;\n  height: 300px;\n  transition: all 0.5s ease-in-out;\n  &:hover {\n    width: 500px;\n    .backdropImg {\n      width: 500px;\n      opacity: 1;\n    }\n    .posterImg {\n      opacity: 0;\n      width: 500px;\n    }\n    .backdropWrapper {\n      opacity: 1;\n      width: 500px;\n    }\n  }\n`;\n\nconst DefaultImg = styled.img`\n  position: relative;\n  cursor: pointer;\n  width: 200px;\n  height: 300px;\n  transition: opacity 0.5s ease-in-out;\n  transition: width 0.5s ease-in-out;\n`;\n\nconst BackdropImg = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 500px;\n  height: 300px;\n  transition: all 0.5s ease-in-out;\n`;\n\nconst BackDropWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  overflow-x: hidden;\n  justify-content: center;\n  flex-direction: column;\n  transition: all 0.5s ease-in-out;\n  opacity: 0;\n  span {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: calc(500px - 2rem);\n    height: 50px;\n    color: white;\n    text-shadow: 2px 2px 2px black;\n    font-weight: 900;\n    display: flex;\n    padding: 0 1rem;\n    align-items: center;\n    font-size: 1.2rem;\n  }\n  p {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: calc(500px - 2rem);\n    min-height: 100px;\n    height: fit-content;\n    background-color: rgba(0, 0, 0, 0.5);\n    color: white;\n    text-shadow: 3px 3px 3px black;\n    font-weight: 400;\n    display: flex;\n    text-align: justify;\n    justify-content: center;\n    align-items: center;\n    font-size: 1rem;\n    padding: 0 1rem;\n  }\n`;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport CardMaker from \"../utility/Cards\";\nimport styled from \"styled-components\";\nimport { HiOutlineChevronLeft, HiOutlineChevronRight } from \"react-icons/hi\";\n\nconst Category = ({ title, movies }) => {\n  const [showSlider, setShowSlider] = useState(false);\n  const rowRef = useRef(null);\n\n\n  const handleScroll = (direction) => {\n    const row = rowRef.current;\n    console.log('clicked', row)\n    if (direction === \"left\") {\n      console.log('left');\n      // TODO - add logic to scroll left, currently works but needs to be more dynamic\n      row.style.transform = \"translateX(50vw)\";\n    } else if (direction === \"right\") {\n      row.style.transform = \"translateX(-50vw)\";\n    }\n  };\n\n  return (\n    <Wrapper\n    className=\"category\"\n    onMouseEnter={() => setShowSlider(true)}\n    onMouseLeave={() => setShowSlider(false)}\n    >\n      {showSlider && (\n        <LeftArrow className=\"leftArrow\" onClick={() => handleScroll('left')}>\n          <HiOutlineChevronLeft />\n        </LeftArrow>\n      )}\n      <h1>{title}</h1>\n      <div\n        className=\"row\"\n        ref={rowRef}\n      >\n        {movies.map((item) => CardMaker(item))}\n      </div>\n      {showSlider && (\n        <RightArrow onClick={() => handleScroll('right')}>\n          <HiOutlineChevronRight />\n        </RightArrow>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Category;\n\nconst Wrapper = styled.div`\n  position: relative;\n  margin-bottom: 2rem;\n  margin-left: 4rem;\n  height: 350px;\n  .row {\n    display: flex;\n    flex-wrap: nowrap;\n    width: fit-content;\n    transition: transform 1s ease-in-out;\n    transform: translateX(0px);\n  }\n`;\n\nconst LeftArrow = styled.div`\n  position: absolute;\n  top: 68px;\n  left: -80px;\n  width: 80px;\n  height: 300px;\n  background-color: rgba(0, 0, 0, 0.75);\n  color: #5e5e5e;\n  font-size: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  z-index: 1;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.9);\n    color: #8f8f8f;\n  }\n`;\n\nconst RightArrow = styled.div`\n  position: absolute;\n  top: 68px;\n  right: 0;\n  width: 80px;\n  height: 300px;\n  background-color: rgba(0, 0, 0, 0.75);\n  color: #5e5e5e;\n  font-size: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  z-index: 1;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.9);\n    color: #8f8f8f;\n  }\n`;\n","import React, { useEffect } from \"react\";\n\nimport Header from \"../components/Header\";\nimport Background from \"../components/Background\";\n// import CardMaker from \"../utility/Cards\";\nimport Category from \"../components/Category\";\n\nimport styled from \"styled-components\";\n\n// To have the row array move over to next not fully visible card, instead of simply incrementing by ++, take screen size and divide by card width, round down, and this will give how many cards are in the viewport. Increment array counter by this number to get next starting index to make row navigation more modern.\n\n// Math.floor(window.innerWidth / card_width[200]) ... Need to account for padding and margin of cards.\n\nconst Main = () => {\n  const [popular, setPopular] = React.useState(null);\n  const [trending, setTrending] = React.useState(null);\n  const [horror, setHorror] = React.useState(null);\n  const [romance, setRomance] = React.useState(null);\n  const [comedy, setComedy] = React.useState(null);\n  const [action, setAction] = React.useState(null);\n  const [family, setFamily] = React.useState(null);\n\n  // Simplify genre fetches into one function that takes in genre id as parameter and returns array of movies for that genre.\n  // find way to minimize number of fetches to API.\n  const genreList = {\n    Action: 28,\n    Adventure: 12,\n    Animation: 16,\n    Comedy: 35,\n    Crime: 80,\n    Documentary: 99,\n    Drama: 18,\n    Family: 10751,\n    Fantasy: 14,\n    History: 36,\n    Horror: 27,\n    Music: 10402,\n    Mystery: 9648,\n    Romance: 10749,\n    ScienceFiction: 878,\n    TVMovie: 10770,\n    Thriller: 53,\n    War: 10752,\n    Western: 37\n  };\n\n  const getGenreMovies = async (genre) => {\n    const response = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=24414d8fd189b8a9cd3125c1ec11b248&language=en-US&sort_by=popularity.desc&include_adult=false&page=1&with_genres=${genre}&region=US&adult=false`);\n    const data = await response.json();\n    console.log('data: ', genre)\n    return data.results;\n  }\n\n  const getPopularMovies = async () => {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=24414d8fd189b8a9cd3125c1ec11b248&language=en-US&page=1&region=US&adult=false`);\n    const data = await response.json();\n    console.log(data);\n    setPopular(data.results);\n  }\n  const getTrendingMovies = async () => {\n    const response = await fetch(`https://api.themoviedb.org/3/trending/movie/week?api_key=24414d8fd189b8a9cd3125c1ec11b248&region=US&adult=false`);\n    const data = await response.json();\n    setTrending(data.results);\n  }\n\n\n\n  // TMDB API\n  useEffect (() => {\n    getPopularMovies();\n    getTrendingMovies();\n    getGenreMovies(genreList.Horror).then((data) => setHorror(data));\n    getGenreMovies(genreList.Romance).then((data) => setRomance(data));\n    getGenreMovies(genreList.Comedy).then((data) => setComedy(data));\n    getGenreMovies(genreList.Action).then((data) => setAction(data));\n    getGenreMovies(genreList.Family).then((data) => setFamily(data));\n  }, [genreList.Action, genreList.Comedy, genreList.Family, genreList.Horror, genreList.Romance]);\n\n  return (\n    <Container>\n      <Background />\n      <Header login={false} user={true}/>\n      <Wrapper className=\"body flex column a-center j-center\">\n      {trending && <Category title=\"Trending\" movies={trending} />}\n      {popular && <Category title=\"Popular\" movies={popular} />}\n      {romance && <Category title=\"Romance\" movies={romance} />}\n      {comedy && <Category title=\"Comedy\" movies={comedy} />}\n      {action && <Category title=\"Action\" movies={action} />}\n      {family && <Category title=\"Family\" movies={family} />}\n      {horror && <Category title=\"Horror\" movies={horror} />}\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Main;\n\nconst Container = styled.div`\n  height: calc(100vh - 70px);\n  width: 100vw;\n  min-width: 768px;\n  position: relative;\n  .body {\n    background-color: rgba(0, 0, 0, 0);\n    width: 100%;\n    position: absolute;\n    top: 70;\n    left: 0;\n    display: flex;\n    flex-direction: column;\n    padding-left: 1rem;\n  }\n  h1 {\n    color: white;\n    font-size: 2.125rem;\n    font-weight: 700;\n    line-height: 1.1;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  top: 70px;\n  width: 100%;\n  height: 100%;\n  overflow-y: scroll;\n  overflow-x: hidden;\n`;\n\n\n"],"names":["data","_useState","useState","_useState2","_slicedToArray","clicked","setClicked","posterImg","concat","poster_path","backdropImg","backdrop_path","summary","overview","length","substring","_jsxs","Card","className","onClick","e","children","_jsx","Navigate","to","urlID","DefaultImg","src","alt","title","id","BackDropWrapper","BackdropImg","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_ref","movies","showSlider","setShowSlider","rowRef","useRef","handleScroll","direction","row","current","console","log","style","transform","Wrapper","onMouseEnter","onMouseLeave","LeftArrow","HiOutlineChevronLeft","ref","map","item","CardMaker","RightArrow","HiOutlineChevronRight","_React$useState","React","_React$useState2","popular","setPopular","_React$useState3","_React$useState4","trending","setTrending","_React$useState5","_React$useState6","horror","setHorror","_React$useState7","_React$useState8","romance","setRomance","_React$useState9","_React$useState10","comedy","setComedy","_React$useState11","_React$useState12","action","setAction","_React$useState13","_React$useState14","family","setFamily","genreList","getGenreMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","genre","response","wrap","_context","prev","next","fetch","sent","json","abrupt","results","stop","_x","apply","arguments","getPopularMovies","_ref2","_callee2","_context2","getTrendingMovies","_ref3","_callee3","_context3","useEffect","then","Container","Background","Header","login","user","Category"],"sourceRoot":""}