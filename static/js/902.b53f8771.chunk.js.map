{"version":3,"file":"static/js/902.b53f8771.chunk.js","mappings":"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","sources":["utility/Cards.jsx","components/Category.jsx","pages/Main.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst CardMaker = (data) => {\n  const [clicked, setClicked] = useState(false);\n\n  const posterImg = `https://image.tmdb.org/t/p/w500/${data.poster_path}`;\n  const backdropImg = `https://image.tmdb.org/t/p/w500/${data.backdrop_path}`;\n\n  let summary = data.overview;\n  if (summary.length > 430) {\n    summary = summary.substring(0, 430) + \"...\";\n  }\n\n  return (\n    <Card\n      className=\"card\"\n      onClick={(e) => setClicked(true)}\n    >\n      {clicked && <Navigate to={`/player/movie=${data.urlID}`} />}\n      <DefaultImg\n        src={posterImg}\n        className=\"posterImg\"\n        alt={data.title}\n        key={data.id}\n      />\n      <BackDropWrapper className=\"backdropWrapper\">\n        <BackdropImg\n          src={backdropImg}\n          alt={data.title}\n          className=\"backdropImg\"\n        />\n        <span>{data.title}</span>\n        <p>{summary}</p>\n      </BackDropWrapper>\n    </Card>\n  );\n};\n\nexport default CardMaker;\n\nconst Card = styled.div`\n  position: relative;\n  margin-right: 0.5rem;\n  cursor: pointer;\n  width: 200px;\n  height: 300px;\n  transition: all 0.5s ease-in-out;\n  &:hover {\n    width: 500px;\n    .backdropImg {\n      width: 500px;\n      opacity: 1;\n    }\n    .posterImg {\n      opacity: 0;\n      width: 500px;\n    }\n    .backdropWrapper {\n      opacity: 1;\n      width: 500px;\n    }\n  }\n`;\n\nconst DefaultImg = styled.img`\n  position: relative;\n  cursor: pointer;\n  width: 200px;\n  height: 300px;\n  transition: opacity 0.5s ease-in-out;\n  transition: width 0.5s ease-in-out;\n`;\n\nconst BackdropImg = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 500px;\n  height: 300px;\n  transition: all 0.5s ease-in-out;\n`;\n\nconst BackDropWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  overflow-x: hidden;\n  justify-content: center;\n  flex-direction: column;\n  transition: all 0.5s ease-in-out;\n  opacity: 0;\n  span {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: calc(500px - 2rem);\n    height: 50px;\n    color: white;\n    text-shadow: 2px 2px 2px black;\n    font-weight: 900;\n    display: flex;\n    padding: 0 1rem;\n    align-items: center;\n    font-size: 1.2rem;\n  }\n  p {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: calc(500px - 2rem);\n    min-height: 100px;\n    height: fit-content;\n    background-color: rgba(0, 0, 0, 0.5);\n    color: white;\n    text-shadow: 3px 3px 3px black;\n    font-weight: 400;\n    display: flex;\n    text-align: justify;\n    justify-content: center;\n    align-items: center;\n    font-size: 1rem;\n    padding: 0 1rem;\n  }\n`;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport CardMaker from \"../utility/Cards\";\nimport styled from \"styled-components\";\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\n\nconst Category = ({ title, movies }) => {\n  const [showSlider, setShowSlider] = useState(false);\n  const rowRef = useRef(null);\n\n  return (\n    <Wrapper\n    className=\"category\"\n    onMouseEnter={() => setShowSlider(true)}\n    onMouseLeave={() => setShowSlider(false)}\n    >\n      {showSlider && (\n        <LeftArrow>\n          <FaChevronLeft />\n        </LeftArrow>\n      )}\n      <h1>{title}</h1>\n      <div\n        className=\"row\"\n        ref={rowRef}\n      >\n        {movies.map((item) => CardMaker(item))}\n      </div>\n      {showSlider && (\n        <RightArrow>\n          <FaChevronRight />\n        </RightArrow>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Category;\n\nconst Wrapper = styled.div`\n  position: relative;\n  margin-bottom: 2rem;\n  margin-left: 4rem;\n  height: 350px;\n  .row {\n    display: flex;\n    flex-wrap: nowrap;\n    width: fit-content;\n    transform: translateX(0px);\n  }\n`;\n\nconst LeftArrow = styled.div`\n  position: absolute;\n  top: 68px;\n  left: -80px;\n  width: 80px;\n  height: 300px;\n  background-color: rgba(0, 0, 0, 0.75);\n  color: #5e5e5e;\n  font-size: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  z-index: 1;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.9);\n    color: #8f8f8f;\n  }\n`;\n\nconst RightArrow = styled.div`\n  position: absolute;\n  top: 68px;\n  right: 0;\n  width: 80px;\n  height: 300px;\n  background-color: rgba(0, 0, 0, 0.75);\n  color: #5e5e5e;\n  font-size: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  z-index: 1;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.9);\n    color: #8f8f8f;\n  }\n`;\n","import React, { useEffect } from \"react\";\n\nimport Header from \"../components/Header\";\nimport Background from \"../components/Background\";\n// import CardMaker from \"../utility/Cards\";\nimport Category from \"../components/Category\";\n\nimport styled from \"styled-components\";\n\n// To have the row array move over to next not fully visible card, instead of simply incrementing by ++, take screen size and divide by card width, round down, and this will give how many cards are in the viewport. Increment array counter by this number to get next starting index to make row navigation more modern.\n\n// Math.floor(window.innerWidth / card_width[200]) ... Need to account for padding and margin of cards.\n\nconst Main = () => {\n  const [popular, setPopular] = React.useState(null);\n  const [trending, setTrending] = React.useState(null);\n  const [horror, setHorror] = React.useState(null);\n  const [romance, setRomance] = React.useState(null);\n  const [comedy, setComedy] = React.useState(null);\n  const [action, setAction] = React.useState(null);\n  const [family, setFamily] = React.useState(null);\n\n  // Simplify genre fetches into one function that takes in genre id as parameter and returns array of movies for that genre.\n  // find way to minimize number of fetches to API.\n  const genreList = {\n    Action: 28,\n    Adventure: 12,\n    Animation: 16,\n    Comedy: 35,\n    Crime: 80,\n    Documentary: 99,\n    Drama: 18,\n    Family: 10751,\n    Fantasy: 14,\n    History: 36,\n    Horror: 27,\n    Music: 10402,\n    Mystery: 9648,\n    Romance: 10749,\n    ScienceFiction: 878,\n    TVMovie: 10770,\n    Thriller: 53,\n    War: 10752,\n    Western: 37\n  };\n\n  const getGenreMovies = async (genre) => {\n    const response = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=24414d8fd189b8a9cd3125c1ec11b248&language=en-US&sort_by=popularity.desc&include_adult=false&page=1&with_genres=${genre}&region=US&adult=false`);\n    const data = await response.json();\n    console.log('data: ', genre)\n    return data.results;\n  }\n\n  const getPopularMovies = async () => {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=24414d8fd189b8a9cd3125c1ec11b248&language=en-US&page=1&region=US&adult=false`);\n    const data = await response.json();\n    console.log(data);\n    setPopular(data.results);\n  }\n  const getTrendingMovies = async () => {\n    const response = await fetch(`https://api.themoviedb.org/3/trending/movie/week?api_key=24414d8fd189b8a9cd3125c1ec11b248&region=US&adult=false`);\n    const data = await response.json();\n    setTrending(data.results);\n  }\n\n\n\n  // TMDB API\n  useEffect (() => {\n    getPopularMovies();\n    getTrendingMovies();\n    getGenreMovies(genreList.Horror).then((data) => setHorror(data));\n    getGenreMovies(genreList.Romance).then((data) => setRomance(data));\n    getGenreMovies(genreList.Comedy).then((data) => setComedy(data));\n    getGenreMovies(genreList.Action).then((data) => setAction(data));\n    getGenreMovies(genreList.Family).then((data) => setFamily(data));\n  }, [genreList.Action, genreList.Comedy, genreList.Family, genreList.Horror, genreList.Romance]);\n\n  return (\n    <Container>\n      <Background />\n      <Header login={false} user={true}/>\n      <Wrapper className=\"body flex column a-center j-center\">\n      {trending && <Category title=\"Trending\" movies={trending} />}\n      {popular && <Category title=\"Popular\" movies={popular} />}\n      {romance && <Category title=\"Romance\" movies={romance} />}\n      {comedy && <Category title=\"Comedy\" movies={comedy} />}\n      {action && <Category title=\"Action\" movies={action} />}\n      {family && <Category title=\"Family\" movies={family} />}\n      {horror && <Category title=\"Horror\" movies={horror} />}\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Main;\n\nconst Container = styled.div`\n  height: calc(100vh - 70px);\n  width: 100vw;\n  min-width: 768px;\n  position: relative;\n  .body {\n    background-color: rgba(0, 0, 0, 0);\n    width: 100%;\n    position: absolute;\n    top: 70;\n    left: 0;\n    display: flex;\n    flex-direction: column;\n    padding-left: 1rem;\n  }\n  h1 {\n    color: white;\n    font-size: 2.125rem;\n    font-weight: 700;\n    line-height: 1.1;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  top: 70px;\n  width: 100%;\n  height: 100%;\n  overflow-y: scroll;\n  overflow-x: hidden;\n`;\n\n\n"],"names":["data","_useState","useState","_useState2","_slicedToArray","clicked","setClicked","posterImg","concat","poster_path","backdropImg","backdrop_path","summary","overview","length","substring","_jsxs","Card","className","onClick","e","children","_jsx","Navigate","to","urlID","DefaultImg","src","alt","title","id","BackDropWrapper","BackdropImg","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_ref","movies","showSlider","setShowSlider","rowRef","useRef","Wrapper","onMouseEnter","onMouseLeave","LeftArrow","FaChevronLeft","ref","map","item","CardMaker","RightArrow","FaChevronRight","_React$useState","React","_React$useState2","popular","setPopular","_React$useState3","_React$useState4","trending","setTrending","_React$useState5","_React$useState6","horror","setHorror","_React$useState7","_React$useState8","romance","setRomance","_React$useState9","_React$useState10","comedy","setComedy","_React$useState11","_React$useState12","action","setAction","_React$useState13","_React$useState14","family","setFamily","genreList","getGenreMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","genre","response","wrap","_context","prev","next","fetch","sent","json","console","log","abrupt","results","stop","_x","apply","arguments","getPopularMovies","_ref2","_callee2","_context2","getTrendingMovies","_ref3","_callee3","_context3","useEffect","then","Container","Background","Header","login","user","Category"],"sourceRoot":""}